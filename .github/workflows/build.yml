name: "Build"
on:
  pull_request:
  # push:
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: false
jobs:
  crate-tests:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        cachixName:
          - holochain-ci
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.0
      - name: Install nix
        uses: cachix/install-nix-action@v16
      - name: Setup cachix
        uses: cachix/cachix-action@v10
        # Don't replace <YOUR_CACHIX_NAME> here!
        if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
        with:
          name: ${{ matrix.cachixName }}
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Set NIX_PATH (FIXME)
        if: ${{ matrix.platform == 'macos-latest' }}
        run: echo NIX_PATH=nixpkgs=$(nix eval --impure --raw --expr '(import ./nix/nvfetcher/sources.nix {}).nixpkgs.src') >> $GITHUB_ENV
      - name: Run cargo tests
        run: nix-shell --pure --run "cargo test"
  holochain-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        nixAttribute:
          - main
          - develop
          - v0_0_117
          - v0_0_118
          - v0_0_119
          - v0_0_120
          - v0_0_121
          - v0_0_122
          - v0_0_123
          - v0_0_124
          - v0_0_125
          - v0_0_126
        # Set this to notify the global nur package registry that changes are
        # available.
        #
        # The repo name as used in
        # https://github.com/nix-community/NUR/blob/master/repos.json
        nurRepo:
          - holochain-nixpkgs
        # Set this to cache your build results in cachix for faster builds
        # in CI and for everyone who uses your cache.
        #
        # Format: Your cachix cache host name without the ".cachix.org" suffix.
        # Example: mycache (for mycache.cachix.org)
        #
        # For this to work, you also need to set the CACHIX_SIGNING_KEY or
        # CACHIX_AUTH_TOKEN secret in your repository secrets settings in
        # Github found at
        # https://github.com/<your_githubname>/nur-packages/settings/secrets
        cachixName:
          - holochain-ci
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: false
      # - name: Checkout github repo (+ download lfs dependencies)
      #   uses: actions/checkout@v2
      #   with:
      #     lfs: true
      # - name: Checkout LFS objects
      #   run: git lfs checkout
      # - name: Checkout code
      #   uses: nschloe/action-cached-lfs-checkout@v1
      - name: Install nix
        uses: cachix/install-nix-action@v16
      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import (import ./nix/nvfetcher/sources.nix {}).nixpkgs.src {}).lib.version'
      - name: Setup cachix
        uses: cachix/cachix-action@v10
        # Don't replace <YOUR_CACHIX_NAME> here!
        if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
        with:
          name: ${{ matrix.cachixName }}
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build derivations
        env:
          nix_attribute: ${{ matrix.nixAttribute }}
        run: nix build -f . "packages.holochain.holochainAllBinariesWithDeps.${nix_attribute}" --extra-experimental-features nix-command
  packages:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        nixAttribute:
          - update-holochain-versions
          - holochain-nixpkgs-util
        cachixName:
          - holochain-ci
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.5
      - name: Install nix
        uses: cachix/install-nix-action@v16
      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import (import ./nix/nvfetcher/sources.nix {}).nixpkgs.src {}).lib.version'
      - name: Setup cachix
        uses: cachix/cachix-action@v10
        # Don't replace <YOUR_CACHIX_NAME> here!
        if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
        with:
          name: ${{ matrix.cachixName }}
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build derivations
        env:
          nix_attribute: ${{ matrix.nixAttribute }}
        run: nix build -f . "packages.${nix_attribute}" --extra-experimental-features nix-command
  #      TODO: this doesn't do anything. investigate and turn back on
  #
  #      - name: Build nix packages
  #        # TODO switch to default nixpkgs channel once nix-build-uncached 1.0.0 is in stable
  #        run: nix run -I 'nixpkgs=channel:nixos-unstable' nixpkgs.nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs
  #      TODO: enable this once we're registered as a NUR
  #      - name: Trigger NUR update
  #        # Don't replace <YOUR_REPO_NAME> here!
  #        if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
  #        run: curl -XPOST "https://nur-update.herokuapp.com/update?repo=${{ matrix.nurRepo }}"

  all-jobs-succeed:
    runs-on: "ubuntu-latest"
    needs: [crate-tests, holochain-binaries, packages]
    steps: [{ name: "all-jobs-succeed", run: ":" }]
